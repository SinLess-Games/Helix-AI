name: Helix_AI_Dev_Environment

services:
  dev-container:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ..:/workspace:cached
    working_dir: /workspace
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    command: /bin/sh -c "while sleep 1000; do :; done"
    networks:
      - dev-network

  cockroachdb:
    image: cockroachdb/cockroach:v23.2.23
    container_name: cockroachdb
    ports:
      - "26257:26257"
      - "8080:8080"
    volumes:
      - cockroachdb-data:/cockroach/cockroach-data
    restart: unless-stopped
    command: start-single-node --insecure
    networks:
      - dev-network

  redis:
    image: redis/redis-stack:6.2.6-v19
    container_name: redis
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - dev-network

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka-data:/bitnami/kafka
    restart: unless-stopped
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge

volumes:
  cockroachdb-data:
  redis-data:
  kafka-data:
